version: 2
jobs:
  install-dependencies:
    docker:
      - image: circleci/node:8
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          command: yarn

      - save_cache:
          paths:
            - node_modules
            - packages/tic-tac-toe-client/node_modules
            - packages/tic-tac-toe-server/node_modules
          key: npm-deps-{{ checksum "./package.json" }}-{{ checksum "./packages/tic-tac-toe-client/package.json" }}-{{ checksum "./packages/tic-tac-toe-server/package.json" }}
  test-ui:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-deps-{{ checksum "./package.json" }}-{{ checksum "./packages/tic-tac-toe-client/package.json" }}-{{ checksum "./packages/tic-tac-toe-server/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - npm-deps-
      - run:
          command: mkdir -p reports/junit
          working_directory: ./packages/tic-tac-toe-client
      - run:
          command: yarn run tslint --format junit -o reports/junit/js-lint-results.xml -p .
          working_directory: ./packages/tic-tac-toe-client
      - run:
          environment:
            JEST_JUNIT_OUTPUT: ./reports/junit/js-test-results.xml
          command: yarn run jest --ci --reporters=default --reporters=jest-junit
          working_directory: ./packages/tic-tac-toe-client
      - run:
          command: bash <(curl -s https://codecov.io/bash)
          working_directory: ./packages/tic-tac-toe-server
      - store_test_results:
          path: ./packages/tic-tac-toe-client/reports/junit
      - store_artifacts:
          path: ./packages/tic-tac-toe-client/reports/junit
  test-server:
    docker:
      - image: circleci/node:8

    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-deps-{{ checksum "./package.json" }}-{{ checksum "./packages/tic-tac-toe-client/package.json" }}-{{ checksum "./packages/tic-tac-toe-server/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - npm-deps-
      - run:
          command: mkdir -p reports/junit
          working_directory: ./packages/tic-tac-toe-server
      - run:
          command: yarn run tslint --format junit -o reports/junit/js-lint-results.xml -p .
          working_directory: ./packages/tic-tac-toe-server
      - run:
          environment:
            JEST_JUNIT_OUTPUT: ./reports/junit/js-test-results.xml
          command: yarn run jest --ci --reporters=default --reporters=jest-junit
          working_directory: ./packages/tic-tac-toe-server
      - run:
          command: bash <(curl -s https://codecov.io/bash)
          working_directory: ./packages/tic-tac-toe-server
      - store_test_results:
          path: ./packages/tic-tac-toe-server/reports/junit
      - store_artifacts:
          path: ./packages/tic-tac-toe-server/reports/junit
  build:
    docker:
      - image: circleci/node
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-deps-{{ checksum "./package.json" }}-{{ checksum "./packages/tic-tac-toe-client/package.json" }}-{{ checksum "./packages/tic-tac-toe-server/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - npm-deps-
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          working_directory: ~/repo/packages/tic-tac-toe-client
          command: docker build -t mattcroberts/tic-tac-toe-client:0.1.${CIRCLE_BUILD_NUM} -t mattcroberts/tic-tac-toe-client:latest --build-arg API_URI=/tictactoe/graphql --build-arg WS_URI=ws://irix.dev/tictactoe/ws .
      - run:
          working_directory: ~/repo/packages/tic-tac-toe-server
          command: docker build -t mattcroberts/tic-tac-toe-server:0.1.${CIRCLE_BUILD_NUM} -t mattcroberts/tic-tac-toe-server:latest .
      - run:
          command: echo $DOCKER_PASSWORD | docker login -u $DOCKER_LOGIN --password-stdin
      - run:
          working_directory: ~/repo/packages/tic-tac-toe-client
          command: docker push mattcroberts/tic-tac-toe-client
      - run:
          working_directory: ~/repo/packages/tic-tac-toe-server
          command: docker push mattcroberts/tic-tac-toe-server
  deploy:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          command: |
            cat > secrets.sh <<- EOM
              export VOLUMERIZE_TARGET=${VOLUMERIZE_TARGET}
              export GOOGLE_DRIVE_ID=${GOOGLE_DRIVE_ID}
              export GOOGLE_DRIVE_SECRET=${GOOGLE_DRIVE_SECRET}
              export POSTGRES_USERNAME=${POSTGRES_USERNAME}
              export POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            EOM
      - run:
          command: scp -o StrictHostKeyChecking=no ./scripts/deploy.sh docker-compose.do.yml ${DO_USER}@irix.dev:~
      - run:
          command: ssh -o StrictHostKeyChecking=no ${DO_USER}@irix.dev "/bin/bash deploy.sh"
      - run:
          command: rm -f secrets.sh
workflows:
  version: 2
  test:
    jobs:
      - install-dependencies
      - test-ui:
          requires:
            - install-dependencies
      - test-server:
          requires:
            - install-dependencies
      - build:
          requires:
            - test-ui
            - test-server
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: pg
